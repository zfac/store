<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cy.store.mapper.AddressMapper">

    <resultMap id="AddressEntityMap" type="com.cy.store.entity.Address">
        <id column="aid" property="aid"/>
        <result column="province_code" property="provinceCode"/>
        <result column="province_name" property="provinceName"/>
        <result column="city_code" property="cityCode"/>
        <result column="city_name" property="cityName"/>
        <result column="area_code" property="areaCode"/>
        <result column="area_name" property="areaName"/>
        <result column="is_default" property="isDefault"/>
        <result column="created_user" property="createdUser"/>
        <result column="created_time" property="createdTime"/>
        <result column="modified_user" property="modifiedUser"/>
        <result column="modified_time" property="modifiedTime"/>
    </resultMap>
    <!--Integer insert(Address address)-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="aid">
        insert into t_address(uid, name, province_name, province_code, city_name, city_code, area_name, area_code, zip,
                              address, phone, tel,tag, is_default, created_user, created_time, modified_user, modified_time)
        values (
                   #{uid}, #{name}, #{provinceName}, #{provinceCode}, #{cityName}, #{cityCode}, #{areaName},
                   #{areaCode}, #{zip}, #{address}, #{phone}, #{tel}, #{tag}, #{isDefault}, #{createdUser},
                   #{createdTime}, #{modifiedUser}, #{modifiedTime}
               );
    </insert>

    <select id="countByUid" resultType="java.lang.Integer">
        select count(*) from t_address where uid=#{uid}
    </select>


    <select id="findByUid" resultMap="AddressEntityMap">
        select * from t_address where uid=#{uid} order by is_default desc,created_time desc
    </select>


    <!-- 将某用户的所有收货地址设置为非默认地址：Integer updateNonDefaultByUid(Integer uid) -->
    <update id="updateNonDefaultByUid">
        update t_address set is_default=0 where uid=#{uid}
    </update>

    <!-- 将指定的收货地址设置为默认地址：
         Integer updateDefaultByAid(
            @Param("aid") Integer aid,
            @Param("modifiedUser") String modifiedUser,
            @Param("modifiedTime") Date modifiedTime) -->
    <update id="updateDefaultByAid">
        update t_address
        set is_default = 1,
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where aid=#{aid}
    </update>


    <select id="findByAid" resultMap="AddressEntityMap">
        select *
        from t_address
        where aid=#{aid};
    </select>



    <!-- 根据收货地址id删除数据：Integer deleteByAid(Integer aid) -->
    <delete id="deleteByAid">
       delete from t_address where aid = #{aid}
    </delete>

    <!-- 查询某用户最后修改的收货地址：Address findLastModified(Integer uid) -->
    <select id="findLastModified" resultMap="AddressEntityMap">
        select * from t_address where uid = #{uid} order by modified_time desc limit 0,1
    </select>






</mapper>